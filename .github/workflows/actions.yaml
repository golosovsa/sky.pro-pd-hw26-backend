name: build and deploy workflow
on:
  - push
jobs:

  check_code:
    runs-on: ubuntu-latest
    steps:
      - name: Setup Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.10.7
          architecture: x64
      - name: Checkout PyTorch
        uses: actions/checkout@master
      - name: Install flake8
        run: pip install flake8
      - name: Run flake8
        uses: suo/flake8-github-action@releases/v1
        with:
          checkName: 'check_code'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build_and_push:
    runs-on: ubuntu-latest
    steps:
      - name: clone code
        uses: actions/checkout@v2
      - name: docker build
        run: docker build -t golosovsa/skypro-pd-hw26:$GITHUB_REF_NAME-$GITHUB_RUN_ID .
      - name: docker login
        run: echo ${{ secrets.DOCKER_TOKEN }} | docker login -u ${{ secrets.DOCKER_USER }} --password-stdin
      - name: docker push
        run: docker push golosovsa/skypro-pd-hw26:$GITHUB_REF_NAME-$GITHUB_RUN_ID

  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push
    steps:
      - name: clone code
        uses: actions/checkout@v2
      - name: render deploy config
        run: |
          export POSTGRES_USER=${{ secrets.POSTGRES_USER }}
          export POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
          export POSTGRES_DB=${{ secrets.POSTGRES_DB }}
          mkdir deploy
          cat docker-compose-ci.yaml | envsubst > deploy/docker-compose.yaml
      - name: copy files to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          password: ${{ secrets.DEPLOY_PASSWORD }}
          source: "deploy/docker-compose.yaml"
          target: "deploy_ci"
          strip_components: 1
      - name: deploy app
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          password: ${{ secrets.DEPLOY_PASSWORD }}
          script: |
            
            cd deploy_ci
            echo '${{ secrets.DEPLOY_PASSWORD }}' | sudo -S docker-compose up -d
